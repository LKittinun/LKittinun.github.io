[["index.html", "A gentle introduction to R for biologists Preface R installation", " A gentle introduction to R for biologists Kittinun Leetanaporn 2023-09-15 Preface เอกสารนี้จัดทำขึ้นเพื่อจุดประสงค์ขึ้นเพื่อแนะนำการใช้ R เบื้องต้น สำหรับนักวิทยาศาสตร์ที่มีความสนใจในการใช้ R ในการวิเคราะห์ข้อมูล ซึ่งผู้ใช้งานจำเป็นจะต้องมีความรู้เรื่อง basic R ต่างๆ เล็กน้อย เพื่อที่จะได้ใช้งานได้อย่างไม่ติดขัด Online version: https://tmrc.psu.ac.th/RNAseq/_book/index.html R installation R console ผู้ที่ต้องการใช้ R สามารถดาวน์โหลดโปรแกรม ได้ที่นี่ https://cran.r-project.org/bin/windows/base/ โดยตัว R console จะมีหน้าตาดังภาพ Rstudio อย่างไรก็ตาม การใช้งาน R ด้วยโปรแกรมนี้จะใช้งานค่อนข้างยาก โดยส่วนใหญผู้ใช้การจะต้องดาวน์โหลด IDE (integrated development environment) มาอำนวยความสะดวกในการเขียนคำสั่ง ซึ่ง IDE ที่ได้รับความนิยมมากที่สุด คือ Rstudio สามารถดาวน์โหลดได้ที่ https://posit.co/download/rstudio-desktop/ นี่คือหน้าต่าง default ของ Rstudio โดยส่วนประกอบหลักคือ Text editor มุมซ้ายบน คือ ที่ๆ เราจะเขียน script ไว้เพื่อ run Environment มุมขวาบน คือ ส่วนที่เก็บข้อมูล variable ต่างๆ ที่เรา assign R console มุมซ้ายล่าง คือ ส่วนที่ R ทำงานจริงๆ ซึ่งก็คือ ตัว R console ที่เราโหลดมาตอนแรกนั่นเอง ส่วน Output ที่จะมีไว้แสดงที่อยู่ของไฟล์ รูปภาพที่ render ออกมา และ อื่นๆ ตามที่เราจะปรับแต่ง เราสามารถเขียนไว้ script ไว้ที่ text editor และกด run คำสั่งแต่ละบรรทัดได้โดยการกด Ctrl + Enter ยินดีด้วย! เท่านี้ท่านก็สามารถเริ่มใช้งาน R ได้แล้ว "],["basic-r.html", "1 Basic R 1.1 Basic operation 1.2 Variable 1.3 Matrix and Dataframe 1.4 Subset", " 1 Basic R 1.1 Basic operation ท่านสามารถใช้ R ในการคำนวณต่างๆ ได้ เช่น บวก ลบ คูณ หาร ยกกำลัง เป็นต้น 3+2 ## [1] 5 3-2 ## [1] 1 3*2 ## [1] 6 3/2 ## [1] 1.5 3^2 ## [1] 9 log(3) ## [1] 1.098612 sqrt(3) ## [1] 1.732051 3==3 # ตรวจสอบว่าข้อมูลเหมือนกันหรือไม่ ## [1] TRUE 1.2 Variable 1.2.1 Variable assignment R สามารถเก็บข้อมูลต่างๆ ไว้ในตัวแปรได้ เพื่อที่สามารถนำมาใช้ในภายหลัง โดยการเก็บตัวแปรนั้นจะใช้เครื่องหมาย &lt;- x &lt;- 2 x ## [1] 2 y &lt;- 3 y ## [1] 3 x+y # ท่านสามารถนำตัวแปรมาทำ operation ได้ตามปกติ ## [1] 5 x*y ## [1] 6 x &lt;- 5 # การลงข้อมูลในตัวแปรเดิมจะเป็นการลบตัวแปรเก่า x ## [1] 5 helloworld &lt;- (x+y)^(x-y) # สามารถตั้งชื่ออะไรก็ได้ตราบใดที่ไม่เว้นวรรค helloworld ## [1] 64 1.2.2 Type of variable R นั้นสามารถรองรับตัวแปรต่างๆ ได้หลากหลาย ซึ่งเป็นได้ทั้ง ตัวเลข หรือตัวอักษร หรือแม้กระทั่งเก็บหลายข้อมูลภายในตัวแปรเดียวได้ x &lt;- &quot;Hello world&quot; # ตัวอักษร x ## [1] &quot;Hello world&quot; y &lt;- c(1,2,3,4) # เก็บหลายตัวข้อมูลในตัวแปรเดียว y ## [1] 1 2 3 4 z &lt;- list(c(1,2,3), 4, c(&quot;hello world&quot;, &quot;I love R&quot;)) # เก็บข้อมูลในรูปแบบ list z ## [[1]] ## [1] 1 2 3 ## ## [[2]] ## [1] 4 ## ## [[3]] ## [1] &quot;hello world&quot; &quot;I love R&quot; class(x) # ท่านสามารถเช็คชนิดของตัวแปรได้โดยใช้ function class() ## [1] &quot;character&quot; ลักษณะตัวแปรต่างๆ ใน R มีดังนี้ ชนิด ตัวอย่าง คำอธิบาย numeric 1, 2.3, 5 จำนวนจริง รวมทศนิยม integer 1, 2, 3 จำนวนเต็ม เป็น subset ของ numeric complex 1i จำนวนเชิงซ้อน character \"สวัสดี\", \"Hello world\" ตัวอักษร ต้องอยู่ในเครื่องหมาย ” ” factor \"a\", \"b\", \"c\" คล้าย character แต่มีจำนวนตัวแปรจำกัด logical TRUE, FALSE ตามหลักตรรกศาสตร์ vector c(1,2,3) หลายข้อมูลใน 1 ตัวแปร โดยต้องเป็นตัวแปรชนิดเดียวกัน list list(1, c(1,3,4), \"Hello\") หลายข้อมูลใน 1 ตัวแปร โดยไม่จำเป้นต้องเป็นตัวแปรชนิดเดียวกัน dataframe data.frame(x=3, y=2) ตาราง ในบางครั้ง class ที่ R ทำการเดามาให้ตั้งแต่แรกอาจจะไม่ใช่ลักษณะตัวแปรที่ท่านต้องการ ท่านสามารถใช้ คำสั่ง as.*() ในการเปลี่ยน class ของตัวแปรนั้นได้ x &lt;- c(1,2,3,4,5) class(x) # ไม่ต้องการให้คิดเป็นตัวเลข เช่น ตัวแปรที่จริงแล้วอาจจะเป็น กลุ่ม1 กลุ่ม2 ## [1] &quot;numeric&quot; x &lt;- as.factor(x) class(x) # เปลี่ยนเป็น factor ## [1] &quot;factor&quot; x_list &lt;- list(&quot;A&quot;= c(1,2,3,4,5), &quot;B&quot; = c(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;,&quot;e&quot;)) x_list ## $A ## [1] 1 2 3 4 5 ## ## $B ## [1] &quot;a&quot; &quot;b&quot; &quot;c&quot; &quot;d&quot; &quot;e&quot; as.data.frame(x_list) # เปลี่ยนเป็น dataframe 1.3 Matrix and Dataframe เนื่องจาก R นั้นเป็นโปรแกรมที่ส่วนมากใช้ในการวิเคราะห์ทางสถิติ ซึ่งเกี่ยวข้อมูลส่วนใหญ่จะถูกเก็บในรูปของตาราง R จึงมีตัวแปรที่เก็บข้อมูลในรูปของตารางโดยเฉพาะ เรียกว่า matrix และ dataframe ซึ่งท่านจะใช้เป็นหลักในการวิเคราะห์ข้อมูลใน R mat &lt;- matrix(c(1,2,3,4), nrow=2) mat ## [,1] [,2] ## [1,] 1 3 ## [2,] 2 4 class(mat) ## [1] &quot;matrix&quot; &quot;array&quot; df &lt;- data.frame(x=c(3,4),y=c(2,5),z=c(4,7)) df class(df) ## [1] &quot;data.frame&quot; โดยตารางนั้นจะประกอบด้วยสองส่วนหลักๆ คล้าย excel spreadsheet ได้แก่ Column (คอลัมน์): คือ ข้อมูลในแนวตั้ง ซึ่งแถวบนสุดจะเป็นชื่อ column นั้นๆ Row (แถว): คือ ข้อมูลในแนวนอน โดย matrix นั้น สามารถเก็บ variable ในรูปแบบเดียวกันได้เท่านั้น แต่ dataframe สามารถเก็บข้อมูลต่างชนิดร่วมกันได้ โดยมีข้อแม้ว่า column เดียวกัน จะต้องเป็นข้อมูลชุดเดียวกัน 1.4 Subset ท่านสามารถดึงข้อมูลแค่บางส่วนออกมาจาก vector, list, matrix หรือ dataframe ได้ เรียกว่าการ subset x &lt;- c(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;) x[3] # subset โดยระบุตำแหน่ง ## [1] &quot;c&quot; x[1:3] # subset หลายตำแหน่ง ## [1] &quot;a&quot; &quot;b&quot; &quot;c&quot; x[c(1,3)] # subset หลากหลายตำแหน่งแบบจำเพาะ ## [1] &quot;a&quot; &quot;c&quot; y &lt;- list(c(1,2,3), c(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;)) y[1] # subset list ตามตำแหน่ง (จะได้ list ย่อยออกมา) ## [[1]] ## [1] 1 2 3 y[[1]] # ดึงข้อมูลที่อยู่ใน list ออกมา ## [1] 1 2 3 ในส่วนของ matrix และ dataframe นั้น ท่านสามารถ subset ตามตำแหน่งได้ โดยการระบุ row และ column ตามลำดับ mat ## [,1] [,2] ## [1,] 1 3 ## [2,] 2 4 mat[1,2] # 1st row, 2nd column ## [1] 3 df df[1,3] # 1st row, 3rd column ## [1] 4 ในส่วนของ dataframe นั้น ท่านสามารถ subset ได้โดยใช้ชื่อของ column อีกด้วย df[&quot;x&quot;] # subset เป็น column ย่อย df[[&quot;x&quot;]] # subset ข้อมูลที่อยู่ใน column นั้น ## [1] 3 4 df[[2, &quot;x&quot;]] # ระบุแถวด้วย ## [1] 4 df$x # เหมือนกัน df[[&quot;x&quot;]] ## [1] 3 4 "],["r-function.html", "2 R function 2.1 Anatomy of function 2.2 Base R function", " 2 R function function (ฟังก์ชัน) คือ ชุดของคำสั่งที่จะสั่งการให้ R ทำงานตามจุดประสงค์ที่ท่านตั้งไว้ โดยตัว function นั้น จะประกอบไปด้วย function ที่มีมาพร้อมกับ R ตั้งแต่ต้น (base R function) function ที่ผู้นิพนธ์ท่านอื่นเขียนไว้ และรวบรวมมาเป็น ชุดของ function เรียกว่า package function ที่ท่านเขียนขึ้นมาเอง 2.1 Anatomy of function function นั้นประกอบด้วย 4 ส่วน คือ 1. Function name (ชื่อฟังก์ชัน) 2. Argument (รายละเอียดของฟังก์ชัน) 3. Function body (รายละเอียดของฟังก์ชัน) 4. Return (ผลลัพธ์ของฟังก์ชัน) ยกตัวอย่างฟังก์ชันหา ค่าเฉลี่ยของข้อมูล find_mean &lt;- function(x, y){ (x + y)/2 } find_mean(2, 3) ## [1] 2.5 find_mean(3, 5) ## [1] 4 จะเห็นว่า function นี่รับข้อมูล 2 ตัวแปร คือ x และ y ซึ่งท่านจะต้องแทนค่าที่ท่านต้องการลงไปใน function หลังจากนั้น function จะทำการประมวลผลและส่งผลลัพธ์กลับมา ในผู้เริ่มต้น ส่วนใหญ่ท่านมักจะไม่ใช้ function ที่เขียนขึ้นมาเองมากนัก เนื่องจาก basic operation ส่วนใหญ่จะมีผู้นิพนธ์ขึ้นมาให้แล้ว 2.2 Base R function Base R function คือ function ที่ติดกับ R มาตั้งแต่แรก ซึ่งท่านสามารถเรียกใช้ได้เลยโดยไม่ต้องทำการเรียก package ขึ้นมาก่อน max(c(1,2,4,5,5,68)) # find max value ## [1] 68 min(c(1,4,5,6,-20)) # find min value ## [1] -20 mean(c(1,2,3,4)) # find mean ## [1] 2.5 median(c(1,2,5,3,4)) # find median ## [1] 3 unique(c(1,1,1,1,2,2,4,5,5,6,7,8)) # display only unique values ## [1] 1 2 4 5 6 7 8 ในส่วนของการ manipulate dataframe นั้น คำสั่งต่างๆ ที่น่ารู้มีดังนี้ df &lt;- data.frame(x = c(3,3,6,7,8,9),y = c(2,5,8,1,2,3),z = c(4,7,9,4,7,8)) df head(df, 5) # ดู 5 แถวแรก tail(df , 5) # ดู 5 แถวล่าง rowMeans(df) # หาค่า mean แต่ละแถว ## [1] 3.000000 5.000000 7.666667 4.000000 5.666667 6.666667 colMeans(df) # หาค่า mean แต่ละ columns ## x y z ## 6.0 3.5 6.5 rownames(df) # ชื่อแถว ## [1] &quot;1&quot; &quot;2&quot; &quot;3&quot; &quot;4&quot; &quot;5&quot; &quot;6&quot; colnames(df) # ชื่อ column ## [1] &quot;x&quot; &quot;y&quot; &quot;z&quot; สามารถดู base R function ทั้งหมดได้ที่ https://stat.ethz.ch/R-manual/R-devel/library/base/html/00Index.html ถ้าท่านต้องการดูว่า function นั้นใช้งานอย่างไร ให้ใส่เครื่องหมาย ? หน้า function นั้น "],["introduction.html", "3 Introduction", " 3 Introduction Tidyverse เป็น package ซึ่งนิพนธ์โดย Haley Wickham และคณะ โดย function ส่วนใหญ่ใน tidyverse นั้นเกี่ยวข้องกับการปรับแต่งข้อมูลจาก dataframe ซึ่งจะอำนวยความสะดวกให้ท่านสามารถทำงานได้มากขึ้นกว่าการใช้ base R ข้อเสียของ tidyverse นั้น อาจจะทำให้ run ช้ากว่า และมีปรับแต่งให้ตรงกับการใช้งานจำเพาะได้ยากกว่า แต่สำหรับผู้ที่ไม่ใช่ R hardcore นั้น tidyverse ถือว่าเป็น package ที่อำนวยความสะดวกได้อย่างดีเยี่ยม การจะใช้งาน package ใดๆ นั้น เริ่มจากท่านจะต้องติดตั้ง package นั้นลงบนเครื่องของท่านก่อน โดยคำสั่ง install.packages() โดยการ install.packages(&quot;tidyverse&quot;) โดย tidyverse นั้นจะเป็น package ใหญ่ และจะแบ่งเป็นหลาย package ย่อยๆ ได้อีก โดยท่านสามารถเรียกใช้ ทั้งหมดได้ หรือ เรียกใช้แค่ package ย่อย library(tidyverse) "],["readr.html", "4 readr", " 4 readr ก่อนที่ท่านจะทำการวิเคราะห์ข้อมูลได้นั้น ท่านจำเป็นที่จะต้องนำข้อมูลเข้ามาใน R ให้ได้ก่อน ซึ่ง tidyverse ได้มี package สำหรับการนำข้อมูลจากสกุลไฟล์ที่เป็นที่นิยมส่วนใหญ่เข้าสู่ R ได้เกือบทั้งหมด โดยใช้ function read_*() library(readr) # ต้อง run ทุกครั้งที่จะใช้งาน GSE63514 &lt;- read_csv(&quot;Resource/GSE63514_norm.csv&quot;) head(GSE63514, 10) GSE63514_meta &lt;- read_csv(&quot;Resource/GSE63514_meta.csv&quot;) head(GSE63514_meta, 10) ไฟล์ที่ได้อ่านเข้ามานี้คือไฟล์ gene expression ของ DNA microarray ในชิ้นเนื้อผู้ป่วยมะเร็งปากมดลูก ซึ่งจะถูกนำไปใช้ต่อใน ตัวอย่างท้ายบท ท่านสามารถเขียนข้อมูลจาก R ลงไปในไฟล์ที่ท่านต้องการด้วย write_()* อีกด้วย อย่างไรก็ตาม แม้ว่า readr นั้นจะสามารถอ่านและเขียนไฟล์ได้ครอบคลุมเป็นอย่างมาก ในบางสกุลไฟล์นั้น อาจจะต้องใช้การอ่านจาก package อื่น Extension Read Write Package .csv (comma-separated), .csv (semicolon-separated) read_csv() , read_csv2() write_csv(), write_csv2() readr .tsv read_tsv() write_tsv() readr .txt read_delim() write_delim() readr text table read_table() write_table() readr .xlsx, .xls read_excel() , read.xlsx() -, write.xlsx(), write.xlsx2() (large DF) readxl , xlsx googlesheet url read_sheet() write_sheet() googlesheets4 .sas read_sas() write_sas() haven .sav (SPSS) read_sav() write_sav() haven .dta (STATA) read_dta() write_dta() haven .json read_json() write_json() jsonlite No idea -&gt; let them guess fread() fwrite() data.table "],["dplyr.html", "5 dplyr 5.1 Basic dataframe manipulation 5.2 Joining data", " 5 dplyr dplyr คือ package ย่อยของ tidyverse ซึ่งทำหน้าที่ในส่วน dataframe manipulation ทำให้ท่านสามารถดึงตารางออกมาได้อย่างอิสระ การใช้งาน package ข้างนอกนั้นจะต้อง install ก่อน และเมื่อใช้งาน จะต้องใช้คำสั่ง library library(dplyr) 5.1 Basic dataframe manipulation ในกรณีนี้จะใช้ข้อมูลตัวอย่าง iris เพื่อสาธิตการใช้ dplyr โดย iris เป็นข้อมูลของความยาวกลีบของพันธุ์ดอกไม้ต่างๆ รูปจาก: https://www.datacamp.com/tutorial/machine-learning-in-r df &lt;- iris # โหลด dataframe ตัวอย่างที่ติดมากับ base R head(df, 5) function หลักๆ ของ dplyr จะเกี่ยวข้องกับ data manipulation เป็นส่วนใหญ่ ในที่นี้จะแนะนำที่จำเป็นต้องใช้ในบทอื่น glimpse() มีไว้ดูภาพรวมข้อมูล glimpse(df) ## Rows: 150 ## Columns: 5 ## $ Sepal.Length &lt;dbl&gt; 5.1, 4.9, 4.7, 4.6, 5.0, 5.4, 4.6, 5.0, 4.4, 4.9, 5.4, 4.8, 4.8, 4.3, 5.8, 5.7, 5.4, 5.1, 5.7, 5.1, 5.4, 5.1,… ## $ Sepal.Width &lt;dbl&gt; 3.5, 3.0, 3.2, 3.1, 3.6, 3.9, 3.4, 3.4, 2.9, 3.1, 3.7, 3.4, 3.0, 3.0, 4.0, 4.4, 3.9, 3.5, 3.8, 3.8, 3.4, 3.7,… ## $ Petal.Length &lt;dbl&gt; 1.4, 1.4, 1.3, 1.5, 1.4, 1.7, 1.4, 1.5, 1.4, 1.5, 1.5, 1.6, 1.4, 1.1, 1.2, 1.5, 1.3, 1.4, 1.7, 1.5, 1.7, 1.5,… ## $ Petal.Width &lt;dbl&gt; 0.2, 0.2, 0.2, 0.2, 0.2, 0.4, 0.3, 0.2, 0.2, 0.1, 0.2, 0.2, 0.1, 0.1, 0.2, 0.4, 0.4, 0.3, 0.3, 0.3, 0.2, 0.4,… ## $ Species &lt;fct&gt; setosa, setosa, setosa, setosa, setosa, setosa, setosa, setosa, setosa, setosa, setosa, setosa, setosa, setos… select() เลือก column ที่ต้องการโดยใช้ตำแหน่งหรือชื่อ column ก็ได้ df |&gt; select(Species) |&gt; head(5) # เลือก column &quot;Species&quot; df |&gt; select(2) |&gt; head(5) # เลือก column ที่ 2 df |&gt; select(1:2) |&gt; head(5) # เลือก 2 column df |&gt; select(contains(&quot;Length&quot;)) |&gt; head(5) # เลือก column ที่มีคำว่า &quot;Length&quot; filter() กรองแถว (row) ที่ต้องการ โดยต้องระบุ ว่าต้องการข้อมูล ที่ column ไหน และต้องการกรองค่าที่เท่าไร # เลือกแถวที่ Species == virginica df |&gt; filter(Species == &quot;virginica&quot;) |&gt; head(5) # เลือกแถวที่ Species = setosa, Sepal.Length = 5.4 df |&gt; filter(Species == &quot;setosa&quot; &amp; Sepal.Length == 5.4) |&gt; head(5) # เลือกแถวที่ Sepal.Length = 5.1 หรือ 4.9 df |&gt; filter(Sepal.Length == 5.1 | Sepal.Length == 4.9) |&gt; head(10) สังเกตว่าจะเห็นเครื่องหมาย |&gt; ซึ่งใน R ท่านจะเรียกว่า “pipe operator” เป็นสิ่งที่เป็นเอกลักษณ์ใน R ซึ่งส่งผลให้สามารถ run operation ได้ต่อๆ กัน เพื่อให้อ่านได้ง่าย # เลือกแถวที่ Species = setosa คอลัมน์ Sepal.Length df |&gt; filter(Species == &quot;setosa&quot;) |&gt; select(Sepal.Length) |&gt; head(5) # เหมือนกับข้างบน แต่ไม่ใช้ pipe operator จะทำความเข้าใจได้ยากกว่า select(filter(df, Species == &quot;setosa&quot;), Sepal.Length) |&gt; head(5) # ใช้แค่ base R solution จะไม่สามารถดึงออกมาเป็น dataframe ได้ df[df[&quot;Species&quot;] == &quot;setosa&quot;, &quot;Sepal.Length&quot;] ## [1] 5.1 4.9 4.7 4.6 5.0 5.4 4.6 5.0 4.4 4.9 5.4 4.8 4.8 4.3 5.8 5.7 5.4 5.1 5.7 5.1 5.4 5.1 4.6 5.1 4.8 5.0 5.0 5.2 5.2 4.7 4.8 5.4 ## [33] 5.2 5.5 4.9 5.0 5.5 4.9 4.4 5.1 5.0 4.5 4.4 5.0 5.1 4.8 5.1 4.6 5.3 5.0 บรรทัดสุดท้าย สำหรับ dataframe จะไม่สามารถดึงมาทั้ง column ได้ ซึ่งจะต้องใช้ข้อมูลอีกแบบ (tibble) แต่จะไม่กล่าวถึง ณ ที่นี่ Note: การ subset โดย dplyr นั้นสามารถทำใน dataframe/tibble เท่านั้น ไม่สามารถทำใน matrix ได้ (ต้องใช้วิธีของ base R) ในส่วนการเรียงข้อมูลนั้นจะใช้ function arrange() df |&gt; arrange(Sepal.Length) |&gt; head(5) # เรียง Sepal.Length จากน้อยไปมาก df |&gt; arrange(desc(Sepal.Length)) |&gt; head(5) # เรียง Sepal.Length จากมากไปน้อย mutate() เป็นคำสั่งที่ใช้ในการสร้างคอลัมน์ใหม่ให้เป็นในแบบที่ต้องการได้ df |&gt; mutate(Sepal_mm = Sepal.Length*100) # มิลลิเมตร df |&gt; mutate(Sepal.Length = log10(Sepal.Length)) # สามารถแทนที่ column เดิมได้ด้วย สามารถจัดกลุ่มตัวแปรได้โดยใช้ group_by() โดยมักจะใช้คู่กับ summarize() ซึ่งเป็นคำสั่งที่ใช้ในการสรุปข้อมูลทั้งหมดตามที่ต้องการ df |&gt; group_by(Species) |&gt; # จัดกลุ่มตาม Species summarize(Sepal.Length = sum(Sepal.Length), Sepal.Width = mean(Sepal.Width)) # รวมความยาวทั้งหมด และเฉลี่ยความกว้าง rename() สามารถใช้ในการเปลี่ยนชื่อคอลัมน์ ระวังว่าชื่อที่ต้องการจะอยู่ด้านซ้ายของเครื่องหมาย = ซึ่งไม่เหมือนคำสั่งอื่น df |&gt; rename(&quot;Sepal_length&quot; = &quot;Sepal.Length&quot;, &quot;Sepal_width&quot; = &quot;Sepal.Width&quot;) 5.2 Joining data หลายครั้งที่การจัดการกับข้อมูลนั้นมีที่มาจากหลายส่วน โดยคอลัมน์หลักร่วมเพียงไม่กี่คอลัมน์ ผู้วิเคราะห์สามารถรวมตารางจากหลายแห่งเข้าด้วยกันได้โดยการใช้คำสั่ง x_join เพื่อความสะดวกในการวิเคราะห์ 5.2.1 Mutating join Mutating join คือการรวมตารางสองตารางเข้าด้วยกันภายใต้เงื่อนไขต่างๆ ในคอลัมน์หลักที่กำหนด ต่อไปจะใช้ตารางดังต่อไปนี้ในการแสดงตัวอย่าง Inner join รวมบรรทัดที่มีตัวแปรที่มีร่วมกันทั้งสองตาราง inner_join(score_df, grade_df, by = &quot;Name&quot;) Outer join/Full join รวมทุกบรรทัด full_join(score_df, grade_df, by = &quot;Name&quot;) Left join รวมบรรทัดจากตาราง y ที่มีตัวแปรในตาราง x และคงบรรทัดในตาราง x ทั้งหมด left_join(score_df, grade_df, by = &quot;Name&quot;) Right join รวมบรรทัดจากตาราง x ที่มีตัวแปรในตาราง y และคงบรรทัดในตาราง y ทั้งหมด right_join(score_df, grade_df, by = &quot;Name&quot;) 5.2.2 Filtering join Filtering join คือการกรองบรรทัดในตาราง xโดยเงื่อนไขจากตาราง y semi join กรองบรรทัดในตาราง x ที่มีตัวแปรในตาราง y semi_join(score_df, grade_df, by = &quot;Name&quot;) anti join กรองบรรทัดในตาราง x ที่ไม่มีตัวแปรในตาราง y anti_join(score_df, grade_df, by = &quot;Name&quot;) "],["ggplot2.html", "6 ggplot2 6.1 (Simple) Anatomy of ggplot 6.2 Scatterplot 6.3 Barchart 6.4 Boxplot 6.5 Histogram 6.6 Fitting a statistical model 6.7 Faceting", " 6 ggplot2 ggplot2 คือ package ย่อยอีกตัวของ tidyverse ซึ่งใช้สำหรับการพล็อตกราฟ 6.1 (Simple) Anatomy of ggplot ggplot(data = your_data, aes(x = x, y = y, col = col, fill = fill)) + geom_*() + theme_*() aes คือ aesthetic ซึ่งหมายถึงการ map ข้อมูลของท่านเข้ากับตำแหน่งของกราฟ x = แกน x, y = แกน y col = สี, fill = สีพื้นหลัง geom_*() คือ การกำหนดว่าท่านต้องการที่จะ plot กราฟอะไร theme_*() คือ การกำหนด theme ของกราฟ เช่น theme_bw(), theme_classic() และยังมีการปรับแต่งอื่นๆ ได้อีกมาก สามารถศึกษาได้ที่ https://ggplot2.tidyverse.org/reference/ 6.2 Scatterplot library(ggplot2) ggplot(df, aes(x = Sepal.Width, y = Sepal.Length, col = Species)) + geom_point() 6.3 Barchart geom_bar() ใช้สำหรับนับจำนวนของ column นั้น ไม่มีค่า y ggplot(df, aes(x = Species, fill = Species)) + # fill ไว้สำหรับแบ่งสีใน barchart geom_bar() ส่วน geom_col() จะรับค่า y ด้วย โดยข้อมูล x ที่ซ้ำกันจะถูกนำมารวมกัน ggplot(df, aes(x = Species, y = Sepal.Width, fill = Species)) + geom_col() สังเกตว่าค่าที่ได้เกิดจากการรวมกันของข้อมูลทั้งคอลัมน์ ซึ่งมักไม่เป็นที่ต้องการในการแสดง ส่วนใหญ่มักจะใช้ในการแสดงค่าเฉลี่ยมากกว่า ในการนี้ ควรใช้คำสั่ง dplyr::summarize() ในการสรุปข้อมูลก่อน df |&gt; group_by(Species) |&gt; summarize(across(everything(), mean)) |&gt; ggplot(aes(x = Species, y = Sepal.Width, fill = Species)) + geom_col() จะเห็นว่ากราฟแสดงค่าเฉลี่ยซึ่งตรงตามความต้องการทั่วไปมากกว่า (สังเกตแกน y) 6.4 Boxplot ทำการสร้าง box plot ggplot(df, aes(x = Species, y = Sepal.Width, fill = Species)) + geom_boxplot() 6.5 Histogram ในการทำงานสถิตินั้น โดยส่วนใหญ่จะต้องทำการตรวจสอบการกระจายของข้อมูลก่อนวิเคราะห์ทางสถิติ ซึ่งสามารถทำได้โดยใช้ geom_histogram()หรือ geom_density() ggplot(df, aes(x = Sepal.Width)) + geom_histogram(fill = &quot;skyblue&quot;, binwidth = 0.1) # binwidth = ความกว้างของแต่ละช่วงข้อมุล ggplot(df, aes(x = Sepal.Width)) + geom_density(fill = &quot;violet&quot;, alpha = 0.5) ทั้งนี้ ท่านสามารถพล็อตหลายกราฟเข้าด้วยกันได้ ด้วยการ + ตามหลังไปเรื่อยๆ เพียงแต่ต้องระวังเรื่อง scale ที่ต้องเป็นระดับเดียวกัน ggplot(df, aes(x = Sepal.Width)) + geom_histogram(aes(y = after_stat(density)), binwidth = 0.1, fill = &quot;skyblue&quot;) + # ปรับเป็นความถี่ geom_density(fill = &quot;violet&quot;, alpha = 0.5) + theme_bw() # ลบภาพพื้นหลังสีเทาออก 6.6 Fitting a statistical model ท่านสามารถที่พล็อต statistical model ได้โดยใช้ geom_smooth() ยกตัวอย่าง เช่น ถ้าอยากดูความสัมพันธ์ของ Sepal.Length และ Petal.Length ggplot(df, aes(x = Sepal.Length, y = Petal.Length, color = Species)) + # สีตาม Species geom_point(color = &quot;black&quot;) + geom_smooth(method = &quot;loess&quot;) + # fit a LOESS model theme_bw() ggplot(df, aes(x = Sepal.Length, y = Petal.Length, color = Species)) + # สีตาม Species geom_point(color = &quot;black&quot;) + geom_smooth(method = &quot;lm&quot;) + # fit a linear model theme_bw() 6.7 Faceting ในบางครั้งท่านอาจจะต้องการที่จะพล็อตกราฟแยกกันเป็นส่วนๆ มากกว่ารวมกันในกราฟเดียว ท่านสามารถแบ่ง partition ของการพล็อตแต่ละกลุ่มได้โดยใช้ facet ggplot(df, aes(x = Sepal.Length, y = Petal.Length, color = Species)) + # สีตาม Species geom_point(color = &quot;black&quot;) + geom_smooth(method = &quot;lm&quot;) + facet_wrap(~Species) + # แบ่งเป็นหลายกลุ่ม theme_bw() ggplot(df, aes(x = Sepal.Length, fill = Species)) + # สีตาม Species geom_histogram(binwidth = 0.1) + facet_wrap(~Species, scales = &quot;free_x&quot;, nrow = 2) + # ทำให้แกน x ไม่ fix ค่า theme_bw() "],["case-study.html", "7 Case study", " 7 Case study ต่อไปนี้จะเป็นตัวอย่างในการใช้ R ในการวิเคราะห์ข้อมูล molecular data เบื้องต้น โดยใช้ข้อมูลจาก GEO dataset GSE63514 ซึ่งเป็น gene expression microarray knitr::include_graphics(&quot;Picture/affymatrix.jpg&quot;) ไฟล์แรกที่อ่านเข้ามาคือ GSE63514_norm.csv ซึ่งเป็นไฟล์ microarray expression ของชิ้นเนื้อปากมดลูก ประกอบด้วย ตัวอย่าง Normal , CIN1 , CIN2 , CIN3 , Cancer ในที่นี้เราจะทำการวิเคราะห์ 10,000 gene แรก library(tidyverse) GSE63514 &lt;- read_csv(&quot;Resource/GSE63514_norm.csv&quot;) |&gt; head(10000) names(GSE63514) ## [1] &quot;probe&quot; &quot;GSM1551311_Normal-01_U133_Plus2.CEL.gz&quot; &quot;GSM1551312_Normal-02_U133_Plus2.CEL.gz&quot; ## [4] &quot;GSM1551313_Normal-03_U133_Plus2.CEL.gz&quot; &quot;GSM1551314_Normal-04_U133_Plus2.CEL.gz&quot; &quot;GSM1551315_Normal-05_U133_Plus2.CEL.gz&quot; ## [7] &quot;GSM1551316_Normal-06_U133_Plus2.CEL.gz&quot; &quot;GSM1551317_Normal-07_U133_Plus2.CEL.gz&quot; &quot;GSM1551318_Normal-08_U133_Plus2.CEL.gz&quot; ## [10] &quot;GSM1551319_Normal-09_U133_Plus2.CEL.gz&quot; &quot;GSM1551320_Normal-10_U133_Plus2.CEL.gz&quot; &quot;GSM1551321_Normal-11_U133_Plus2.CEL.gz&quot; ## [13] &quot;GSM1551322_Normal-12_U133_Plus2.CEL.gz&quot; &quot;GSM1551323_Normal-13_U133_Plus2.CEL.gz&quot; &quot;GSM1551324_Normal-14_U133_Plus2.CEL.gz&quot; ## [16] &quot;GSM1551325_Normal-15_U133_Plus2.CEL.gz&quot; &quot;GSM1551326_Normal-16_U133_Plus2.CEL.gz&quot; &quot;GSM1551327_Normal-17_U133_Plus2.CEL.gz&quot; ## [19] &quot;GSM1551328_Normal-18_U133_Plus2.CEL.gz&quot; &quot;GSM1551329_Normal-19_U133_Plus2.CEL.gz&quot; &quot;GSM1551330_Normal-20_U133_Plus2.CEL.gz&quot; ## [22] &quot;GSM1551331_Normal-21_U133_Plus2.CEL.gz&quot; &quot;GSM1551332_Normal-22_U133_Plus2.CEL.gz&quot; &quot;GSM1551333_Normal-23_U133_Plus2.CEL.gz&quot; ## [25] &quot;GSM1551334_Normal-24_U133_Plus2.CEL.gz&quot; &quot;GSM1551335_CIN1-01_U133_Plus2.CEL.gz&quot; &quot;GSM1551336_CIN1-02_U133_Plus2.CEL.gz&quot; ## [28] &quot;GSM1551337_CIN1-03_U133_Plus2.CEL.gz&quot; &quot;GSM1551338_CIN1-04_U133_Plus2.CEL.gz&quot; &quot;GSM1551339_CIN1-05_U133_Plus2.CEL.gz&quot; ## [31] &quot;GSM1551340_CIN1-06_U133_Plus2.CEL.gz&quot; &quot;GSM1551341_CIN1-07_U133_Plus2.CEL.gz&quot; &quot;GSM1551342_CIN1-08_U133_Plus2.CEL.gz&quot; ## [34] &quot;GSM1551343_CIN1-09_U133_Plus2.CEL.gz&quot; &quot;GSM1551344_CIN1-10_U133_Plus2.CEL.gz&quot; &quot;GSM1551345_CIN1-11_U133_Plus2.CEL.gz&quot; ## [37] &quot;GSM1551346_CIN1-12_U133_Plus2.CEL.gz&quot; &quot;GSM1551347_CIN1-13_U133_Plus2.CEL.gz&quot; &quot;GSM1551348_CIN1-14_U133_Plus2.CEL.gz&quot; ## [40] &quot;GSM1551349_CIN2-01_U133_Plus2.CEL.gz&quot; &quot;GSM1551350_CIN2-02_U133_Plus2.CEL.gz&quot; &quot;GSM1551351_CIN2-03_U133_Plus2.CEL.gz&quot; ## [43] &quot;GSM1551352_CIN2-04_U133_Plus2.CEL.gz&quot; &quot;GSM1551353_CIN2-05_U133_Plus2.CEL.gz&quot; &quot;GSM1551354_CIN2-06_U133_Plus2.CEL.gz&quot; ## [46] &quot;GSM1551355_CIN2-07_U133_Plus2.CEL.gz&quot; &quot;GSM1551356_CIN2-08_U133_Plus2.CEL.gz&quot; &quot;GSM1551357_CIN2-09_U133_Plus2.CEL.gz&quot; ## [49] &quot;GSM1551358_CIN2-10_U133_Plus2.CEL.gz&quot; &quot;GSM1551359_CIN2-11_U133_Plus2.CEL.gz&quot; &quot;GSM1551360_CIN2-12_U133_Plus2.CEL.gz&quot; ## [52] &quot;GSM1551361_CIN2-13_U133_Plus2.CEL.gz&quot; &quot;GSM1551362_CIN2-14_U133_Plus2.CEL.gz&quot; &quot;GSM1551363_CIN2-15_U133_Plus2.CEL.gz&quot; ## [55] &quot;GSM1551364_CIN2-16_U133_Plus2.CEL.gz&quot; &quot;GSM1551365_CIN2-17_U133_Plus2.CEL.gz&quot; &quot;GSM1551366_CIN2-18_U133_Plus2.CEL.gz&quot; ## [58] &quot;GSM1551367_CIN2-19_U133_Plus2.CEL.gz&quot; &quot;GSM1551368_CIN2-20_U133_Plus2.CEL.gz&quot; &quot;GSM1551369_CIN2-21_U133_Plus2.CEL.gz&quot; ## [61] &quot;GSM1551370_CIN2-22_U133_Plus2.CEL.gz&quot; &quot;GSM1551371_CIN3-01_U133_Plus2.CEL.gz&quot; &quot;GSM1551372_CIN3-02_U133_Plus2.CEL.gz&quot; ## [64] &quot;GSM1551373_CIN3-03_U133_Plus2.CEL.gz&quot; &quot;GSM1551374_CIN3-04_U133_Plus2.CEL.gz&quot; &quot;GSM1551375_CIN3-05_U133_Plus2.CEL.gz&quot; ## [67] &quot;GSM1551376_CIN3-06_U133_Plus2.CEL.gz&quot; &quot;GSM1551377_CIN3-07_U133_Plus2.CEL.gz&quot; &quot;GSM1551378_CIN3-08_U133_Plus2.CEL.gz&quot; ## [70] &quot;GSM1551379_CIN3-09_U133_Plus2.CEL.gz&quot; &quot;GSM1551380_CIN3-10_U133_Plus2.CEL.gz&quot; &quot;GSM1551381_CIN3-11_U133_Plus2.CEL.gz&quot; ## [73] &quot;GSM1551382_CIN3-12_U133_Plus2.CEL.gz&quot; &quot;GSM1551383_CIN3-13_U133_Plus2.CEL.gz&quot; &quot;GSM1551384_CIN3-14_U133_Plus2.CEL.gz&quot; ## [76] &quot;GSM1551385_CIN3-15_U133_Plus2.CEL.gz&quot; &quot;GSM1551386_CIN3-16_U133_Plus2.CEL.gz&quot; &quot;GSM1551387_CIN3-17_U133_Plus2.CEL.gz&quot; ## [79] &quot;GSM1551388_CIN3-18_U133_Plus2.CEL.gz&quot; &quot;GSM1551389_CIN3-19_U133_Plus2.CEL.gz&quot; &quot;GSM1551390_CIN3-20_U133_Plus2.CEL.gz&quot; ## [82] &quot;GSM1551391_CIN3-21_U133_Plus2.CEL.gz&quot; &quot;GSM1551392_CIN3-22_U133_Plus2.CEL.gz&quot; &quot;GSM1551393_CIN3-23_U133_Plus2.CEL.gz&quot; ## [85] &quot;GSM1551394_CIN3-24_U133_Plus2.CEL.gz&quot; &quot;GSM1551395_CIN3-25_U133_Plus2.CEL.gz&quot; &quot;GSM1551396_CIN3-26_U133_Plus2.CEL.gz&quot; ## [88] &quot;GSM1551397_CIN3-27_U133_Plus2.CEL.gz&quot; &quot;GSM1551398_CIN3-28_U133_Plus2.CEL.gz&quot; &quot;GSM1551399_CIN3-29_U133_Plus2.CEL.gz&quot; ## [91] &quot;GSM1551400_CIN3-30_U133_Plus2.CEL.gz&quot; &quot;GSM1551401_CIN3-31_U133_Plus2.CEL.gz&quot; &quot;GSM1551402_CIN3-32_U133_Plus2.CEL.gz&quot; ## [94] &quot;GSM1551403_CIN3-33_U133_Plus2.CEL.gz&quot; &quot;GSM1551404_CIN3-34_U133_Plus2.CEL.gz&quot; &quot;GSM1551405_CIN3-35_U133_Plus2.CEL.gz&quot; ## [97] &quot;GSM1551406_CIN3-36_U133_Plus2.CEL.gz&quot; &quot;GSM1551407_CIN3-37_U133_Plus2.CEL.gz&quot; &quot;GSM1551408_CIN3-38_U133_Plus2.CEL.gz&quot; ## [100] &quot;GSM1551409_CIN3-39_U133_Plus2.CEL.gz&quot; &quot;GSM1551410_CIN3-40_U133_Plus2.CEL.gz&quot; &quot;GSM1551411_Cancer-01_U133_Plus2.CEL.gz&quot; ## [103] &quot;GSM1551412_Cancer-02_U133_Plus2.CEL.gz&quot; &quot;GSM1551413_Cancer-03_U133_Plus2.CEL.gz&quot; &quot;GSM1551414_Cancer-04_U133_Plus2.CEL.gz&quot; ## [106] &quot;GSM1551415_Cancer-05_U133_Plus2.CEL.gz&quot; &quot;GSM1551416_Cancer-06_U133_Plus2.CEL.gz&quot; &quot;GSM1551417_Cancer-07_U133_Plus2.CEL.gz&quot; ## [109] &quot;GSM1551418_Cancer-08_U133_Plus2.CEL.gz&quot; &quot;GSM1551419_Cancer-09_U133_Plus2.CEL.gz&quot; &quot;GSM1551420_Cancer-10_U133_Plus2.CEL.gz&quot; ## [112] &quot;GSM1551421_Cancer-11_U133_Plus2.CEL.gz&quot; &quot;GSM1551422_Cancer-12_U133_Plus2.CEL.gz&quot; &quot;GSM1551423_Cancer-13_U133_Plus2.CEL.gz&quot; ## [115] &quot;GSM1551424_Cancer-14_U133_Plus2.CEL.gz&quot; &quot;GSM1551425_Cancer-15_U133_Plus2.CEL.gz&quot; &quot;GSM1551426_Cancer-16_U133_Plus2.CEL.gz&quot; ## [118] &quot;GSM1551427_Cancer-17_U133_Plus2.CEL.gz&quot; &quot;GSM1551428_Cancer-18_U133_Plus2.CEL.gz&quot; &quot;GSM1551429_Cancer-19_U133_Plus2.CEL.gz&quot; ## [121] &quot;GSM1551430_Cancer-20_U133_Plus2.CEL.gz&quot; &quot;GSM1551431_Cancer-21_U133_Plus2.CEL.gz&quot; &quot;GSM1551432_Cancer-22_U133_Plus2.CEL.gz&quot; ## [124] &quot;GSM1551433_Cancer-23_U133_Plus2.CEL.gz&quot; &quot;GSM1551434_Cancer-24_U133_Plus2.CEL.gz&quot; &quot;GSM1551435_Cancer-25_U133_Plus2.CEL.gz&quot; ## [127] &quot;GSM1551436_Cancer-26_U133_Plus2.CEL.gz&quot; &quot;GSM1551437_Cancer-27_U133_Plus2.CEL.gz&quot; &quot;GSM1551438_Cancer-28_U133_Plus2.CEL.gz&quot; ส่วนที่สองคือ metadata (ข้อมูลระบุตัวตน) ของข้อมูลนี้ GSE63514_meta &lt;- read_csv(&quot;Resource/GSE63514_meta.csv&quot;) head(GSE63514_meta, 10) ส่วนที่สามคือไฟล์ annotation ของ probe hgu133plus2_genenames &lt;- read_csv(&quot;Resource/hgu133plus2_genenames.csv&quot;) |&gt; select(-1) # remove row number head(hgu133plus2_genenames, 10) สมมติว่าในตัวอย่างนี้ จะทำการวิเคราะห์แค่ระหว่าง normal tissue กับ cancer tissue เท่านั้น จึงจำเป็นที่จะต้องกรองข้อมูลที่ไม่ต้องการออกไปเสียก่อน exprs_nc &lt;- GSE63514 |&gt; select(probe, contains(c(&quot;Normal&quot;, &quot;Cancer&quot;))) meta_nc &lt;- GSE63514_meta |&gt; filter(grepl(&quot;Normal|Cancer&quot;, title)) |&gt; select(title, `characteristics_ch1.1`, `dissection:ch1`) names(exprs_nc) &lt;- c(&quot;prob&quot;, meta_nc$title) # เปลี่ยนชื่อให้อ่านง่าย head(exprs_nc, 10) head(meta_nc, 10) เมื่อดูในตัวแปร exps_nc จะพบว่า probe นั้นเป็นชื่อเฉพาะของตัวเครื่อง ไม่ใช้ชื่อสากล ในที่นี้จะทำการเปลี่ยน probe ให้เป็นชื่อ gene นั้นๆ แต่ว่าชื่อ list รายชื่อนั้นเป็นชื่อทั้งหมดของ probe สังเกตได้จากจำนวนแถวที่ไม่เท่ากัน nrow(exprs_nc) ## [1] 10000 nrow(hgu133plus2_genenames) ## [1] 54675 ในที่นี้ การใช้คำสั่ง *_join() จะทำให้สามารถรวมแค่แถวที่ต้องการได้ gene_nc &lt;- exprs_nc |&gt; left_join(hgu133plus2_genenames, by = c(&quot;prob&quot;=&quot;PROBEID&quot;)) |&gt; relocate(c(&quot;SYMBOL&quot;, &quot;ENTREZID&quot;, &quot;GENENAME&quot;), .after = &quot;prob&quot;) gene_nc nrow(gene_nc) ## [1] 10000 "],["survival-analysis.html", "8 Survival analysis 8.1 Kaplein-Meir estimate 8.2 Log-rank test 8.3 Cox-proportional hazard model", " 8 Survival analysis ในงานวิจัยที่กระทำกับผู้ป่วย หรือแม้กระทั้งเซลล์นั้น บางครั้งจะมีความจำเป็นที่ต้องทำการวิเคราะห์ข้อมูลเพื่อเปรียบเทียบสร้างแบบจำลองที่สามารถทำนายเวลาที่ใช้ก่อนที่จะเกิดเหตุการณ์ที่ท่านสนใจ (event) เช่น เวลาที่ผู้ป่วยจะเสียชีวิตจากโรคมะเร็งนับตั้งแต่วันวินิจฉัย เวลาของเซลล์ที่จะตายหลังจากใส่สารบางอย่างที่สนใจ เป็นต้น ลักษณะพิเศษของการวิเคราะห์ survival analysis คือ มีการวิเคราะห์โดยใช้ปัจจัยที่เรียกว่า censoring ร่วม ซึ่งคือการที่ เหตุการณ์ที่คาดหวังว่าจะเกิดนั้นไม่มาถึงแม้ว่าจะครบตามเวลาที่ผู้วิจัยสังเกตการณ์แล้ว ซึ่งทำให้ไม่สามารถมั่นใจได้ว่าเหตุการณ์นั้นจะเกิดต่อไปหรือไม่ ณ เวลาหลังจากนี้ การ censor โดยหลักมี 3 แบบ คือ Right-censor (ดังรูป) คือ ไม่แน่ใจข้อมูลการเกิด event เวลาสุดท้ายที่พบ ซึ่งพบมมากที่สุด Left-censor คือ ไม่แน่ใจข้อมูลช่วงเวลาเริ่มต้น เช่น diagnosis วันไหน Interval-censor คือ เวลาช่วงใดช่วงหนึ่งหายไป 8.1 Kaplein-Meir estimate Kaplein-Meir estimate (KM) คือกราฟแสดงอัตราการเกิดของเหตุการณ์เมื่อเทียบกับเวลาที่ผ่านไป โดยหลักการคำนวณ survival คือ \\[ \\hat{S}(t) = \\prod_{i: t_{i} \\leq t}(1- \\frac{d_{i}}{n_{i}})\\] \\[ \\text{Survival proability} = \\frac{n.risk - n.event}{n.risk} \\] อธิบายหลักการอย่างง่ายของ KM นั่นคือ ทุกเคสทียังไม่เกิดเหตุการณ์นั้น จะเป็น “เคสที่เสี่ยงต่อการเกิดเหตุการณ์ (at risk)” ซึ่งจำนวนเคสแรกเริ่มที่เสี่ยง (number at risk) จะเท่ากับจำนวนเคสทั้งหมด (sample size) โดยจะนับการเกิด event ตามปกติ เพียงแต่ถ้าเคสนั้นถูก censor นั้น n.risk จะลดลงด้วย ทำให้อัตราการเกิด event ยังไม่เปลี่ยนแปลง ดังตัวอย่างตามตาราง time n.risk n.event n.censor calculation estimate 5 10 1 0 9/10 0.9 11 9 3 0 0.9 x 6/9 0.6 12 6 1 0 0.6 x 5/6 0.5 92 5 0 1 0.5 x 5/5 0.5 105 4 0 1 0.5 x 4/4 0.5 173 3 0 1 0.5 x 3/3 0.5 174 2 0 1 0.5 x 2/2 0.5 175 1 0 1 0.5 x 0/1 0 เมื่อนำไปพล็อตกราฟแล้วจะได้ผลดังนี้ สังเกตุว่าส่วนที่ censor (มีสัญลักษณ์ +) จะไม่มีการตกลงของกราฟ แต่เมื่อถึงเวลาที่มี event เกิดขึ้น การตกลงของกราฟจะสูงกว่าเมื่อไม่มี censor นำมาก่อน 8.1.1 การสร้าง KM ใน R ตัวอย่างข้อมูลของผู้ป่วยมะเร็งรังไข่ที่ได้รับการรักษาโดยการผ่าตัด library(dplyr) library(survival) head(ovarian) อธิบายตัวแปร: age = อายุ futime = ระยะเวลาติดตามตั้งแต่วินิจฉัยจนเสียชีวิต/มาพบแพทย์ครั้งสุดท้าย fustat = 0 - censor, 1 - dead resid.ds = มีชิ้นส่วนของมะเร็งหลงเหลือหลังจากการผ่าตัด (ผ่าตัดได้ไม่หมด) rx = กลุ่มการรักษา ecog.ps = ECOG performance status คะแนนน้อยแปลว่าผู้ป่วยมีสุขภาพโดยรวมดี เมื่อใช้ function Surv() จะทำการเปลี่ยน futime ให้รับรู้การ censor สังเกตว่าผู้ป่วยที่ ไม่เกิดเหตุการณ์จะทีสัญลักษณ์ + อยู่ข้างหลัง บ่งบอกว่าข้อมูลนั้นถูก censor นั่นหมายความว่า ผู้ป่วยจะเกิดเหตุการณ์หรือไม่ก็ได้หลังจากนี้ เพียงแต่ผู้วิจัยไม่สามารถทราบได้แล้ว censored_df &lt;- ovarian |&gt; mutate(censored_futime = Surv(ovarian$futime, ovarian$fustat)) head(select(censored_df, futime, fustat, censored_futime)) การพล็อต KM นั้นสามารถทำได้โดยใช้ package survminer โดยเริ่มจากการสร้างตาราง survival curve จากคำสั่ง survfit() library(survminer) library(broom) ovarian_surv &lt;- survfit( Surv(futime/365.25, fustat) ~ 1, data = ovarian # เปลี่ยนเป็นปี ) ovarian_surv |&gt; tidy() |&gt; head(10) หลังจากนั้นใช้คำสั่ง ggsurvplot() เพื่อทำการสร้างกราฟ ggsurvplot(ovarian_surv, risk.table = TRUE, break.time.by = 0.25, surv.median.line = &quot;hv&quot;) จะเห็นว่าผู้ป่วยกลุ่มนี้มี median survival อยู่ประมาณ 1.75 ปี ovarian_surv_resid &lt;- survfit( Surv(futime/365.25, fustat) ~ resid.ds, data = ovarian ) ggsurvplot(ovarian_surv_resid, risk.table = TRUE, break.time.by = 0.25, surv.median.line = &quot;hv&quot;, pval = TRUE) จะพบว่า ถ้าผ่าตัดแล้วไม่เหลือร่องรอยของโรค จะมีอัตราการรอดชีวิตที่ดีกว่า แต่ยังไม่ถึงระดับมีนัยสำคัญ 8.2 Log-rank test Log-rank test คือ non-parametric test สำหรับ univariate analysis ที่เปรียบเทียบความแตกต่างของอัตราการเกิด event ว่าแตกต่างอย่างมีนัยสำคัญหรือไม่ ovarian_surv_diff &lt;- survdiff( Surv(futime/365.25, fustat) ~ resid.ds, data = ovarian ) ovarian_surv_diff ## Call: ## survdiff(formula = Surv(futime/365.25, fustat) ~ resid.ds, data = ovarian) ## ## N Observed Expected (O-E)^2/E (O-E)^2/V ## resid.ds=1 11 3 6.26 1.70 3.62 ## resid.ds=2 15 9 5.74 1.85 3.62 ## ## Chisq= 3.6 on 1 degrees of freedom, p= 0.06 Observed คือ จำนวน event ที่เกิดขึ้นในแต่ละกลุ่ม Expected คือ จำนวน event ที่คาดว่าจะเกิดขึ้นในแต่ละกลุ่ม (O-E)^2/E = Chi-square statistics ของค่า observed และ expected Chisq = ผลสุดท้ายของ Chi-square statistics = sum(O-E)^2/E p = p-value ของ Chi-square statistics ค่า log-rank นี้ สามารถแสดงใน KM ได้โดยใช้ pval = TRUE ตามหัวข้อเบื้องต้น 8.3 Cox-proportional hazard model Cox-proportional hazard model (CPH) เป็น semi-parametric model ซึ่งวัด risk ของการเกิด event นั้นๆ โดยมี function คือ \\[ h(t) = h_{0}(t) \\times exp(b_{1}X_{1} + b_{2}X_{2}+ ... + b_{s}X_{p}) \\] \\[ ln(\\frac{h(t)}{h_{0}(t)}) = b_{1}X_{1} + b_{2}X_{2}+ ... + b_{s}X_{p} \\] ซึ่ง \\(h(t)/h_{0}(t)\\) นั้นคือ hazard ratio (HR) หรือ ความเสี่ยงของการเกิด event นั้นๆ การวิเคราะห์ CPH นั้นมีข้อดีกว่า log-rank คือสามารถประมาณการเชิงปริมาณ (quantitative measurement) ผ่าน HR และสามารถวิเคราะห์สมการแบบ multivariate analysis ได้ ovarian_cox &lt;- coxph(Surv(futime/365.25, fustat) ~ resid.ds + age + factor(rx), data = ovarian) ovarian_cox ## Call: ## coxph(formula = Surv(futime/365.25, fustat) ~ resid.ds + age + ## factor(rx), data = ovarian) ## ## coef exp(coef) se(coef) z p ## resid.ds 0.6964 2.0065 0.7585 0.918 0.35858 ## age 0.1285 1.1372 0.0473 2.718 0.00657 ## factor(rx)2 -0.8489 0.4279 0.6392 -1.328 0.18416 ## ## Likelihood ratio test=16.77 on 3 df, p=0.0007889 ## n= 26, number of events= 12 exp(coef) = HR = \\(h(t)/h_{0}(t)\\) ในที่นี้ท่านสามารถอภิปรายได้ว่า อายุที่เพิ่มขึ้น 1 ปีนั้น ส่งผลให้เกิดอัตราการเสียชีวิตในผู้ป่วยมะเร็งรังไข่เพิ่มขึ้น 1.13 เท่า (13%) และมีนัยสำคัญทางสถิติ p ในตาราง คือ ค่าคำนวณ p-value จาก Wald’s test ของแต่ละตัวแปรว่ามีผลต่ออัตราการรอดชีวิตหรือไม่ p ข้างล่าง คือ overall p จาก likelihood ratio test ว่าจากทั้งหมด มีตัวแปรใดตัวแปรหนึ่งส่งผลให้อัตรากการรอดชีวิตเปลี่ยนไปอย่างมีนัยสำคัญทางสถิติหรือไม่ 8.3.1 การตรวจสอบ assumption validity ของ CPH CPH นั้นมี assumption ดังนี้: ตัวแปรแต่ละกลุ่มมีอัตราการเกิด event ที่แตกต่างกัน HR เท่ากันทุกช่วงเวลา เช่น ที่ 1, 2, 5 ปี อัตราส่วนการเสียชีวิตระหว่างตัวแปรเท่ากันหมด ตัวแปรมีความสัมพันธ์แบบ linear continuous variable ไม่จำเป็นต้องทราบลักษณะการกระจายตัวของข้อมูลก่อน (จึงเป็น semi-parametric model) สามารถตรวจสอบ HR ได้โดยใช้ proportionality assumption test จาก Schoenfeld residuals โดย cox.zph() ovarian_coxzph &lt;- cox.zph(ovarian_cox) ggcoxzph(ovarian_coxzph) โดย test นี้จะทำการเปรียบเทียบ residuals ระหว่าง risk-weight average กับ ตัวแปรนั้นๆ ว่ามีการเปลี่ยนแปลงไปในทิศทางใดทิศทางหนึ่งหรือไม่ ถ้ามี (p &lt; 0.05) หมายความว่า เวลาที่ผ่านไปอาจจะส่งผลให้ HR นั้นมีความแตกต่างกัน ซึ่งจะต้องทำ time-varying CPH เพิ่มเติม โดยในข้อมูล ovarian นี้ ไม่มีตัวใดที่ p-value &lt; 0.05 จึงถือได้ว่า อัตราส่วนนั้นคงที่ และทำให้ CPH นั้น valid ในส่วนของ linearity สามารถตวจสอบโดยใช้ function ggcoxfunctional() ovarian_linear_age &lt;- ggcoxfunctional(Surv(futime/365.25, fustat)~ age+ + I(log(age)) + I(sqrt(age)), data = ovarian) ovarian_linear_age จะเห็นว่า age นั้นการเพิ่มขึ้นแบบ linearity โดยมี deviation เล็กน้อย "],["session-info.html", "9 Session info", " 9 Session info sessionInfo() ## R version 4.3.1 (2023-06-16 ucrt) ## Platform: x86_64-w64-mingw32/x64 (64-bit) ## Running under: Windows 11 x64 (build 22621) ## ## Matrix products: default ## ## ## locale: ## [1] LC_COLLATE=English_United Kingdom.utf8 LC_CTYPE=English_United Kingdom.utf8 LC_MONETARY=English_United Kingdom.utf8 ## [4] LC_NUMERIC=C LC_TIME=English_United Kingdom.utf8 ## ## time zone: Asia/Bangkok ## tzcode source: internal ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] broom_1.0.5 survminer_0.4.9 ggpubr_0.6.0 survival_3.5-5 lubridate_1.9.2 forcats_1.0.0 stringr_1.5.0 dplyr_1.1.2 ## [9] purrr_1.0.1 readr_2.1.4 tidyr_1.3.0 tibble_3.2.1 ggplot2_3.4.3 tidyverse_2.0.0 ## ## loaded via a namespace (and not attached): ## [1] DBI_1.1.3 bitops_1.0-7 gridExtra_2.3 rlang_1.1.1 magrittr_2.0.3 ## [6] snakecase_0.11.1 compiler_4.3.1 RSQLite_2.3.1 mgcv_1.8-42 png_0.1-8 ## [11] vctrs_0.6.3 pkgconfig_2.0.3 crayon_1.5.2 fastmap_1.1.1 backports_1.4.1 ## [16] XVector_0.40.0 labeling_0.4.3 KMsurv_0.1-5 utf8_1.2.3 rmarkdown_2.24 ## [21] markdown_1.8 tzdb_0.4.0 bit_4.0.5 xfun_0.39 zlibbioc_1.46.0 ## [26] cachem_1.0.8 GenomeInfoDb_1.36.3 jsonlite_1.8.7 blob_1.2.4 highr_0.10 ## [31] jpeg_0.1-10 parallel_4.3.1 R6_2.5.1 bslib_0.5.1 stringi_1.7.12 ## [36] car_3.1-2 jquerylib_0.1.4 Rcpp_1.0.11 bookdown_0.35 knitr_1.43 ## [41] zoo_1.8-12 IRanges_2.34.1 Matrix_1.6-0 splines_4.3.1 timechange_0.2.0 ## [46] tidyselect_1.2.0 rstudioapi_0.15.0 abind_1.4-5 yaml_2.3.7 ggtext_0.1.2 ## [51] lattice_0.21-8 Biobase_2.60.0 withr_2.5.0 KEGGREST_1.40.0 evaluate_0.21 ## [56] xml2_1.3.4 survMisc_0.5.6 Biostrings_2.68.1 pillar_1.9.0 carData_3.0-5 ## [61] stats4_4.3.1 generics_0.1.3 vroom_1.6.3 RCurl_1.98-1.12 S4Vectors_0.38.1 ## [66] hms_1.1.3 commonmark_1.9.0 munsell_0.5.0 scales_1.2.1 xtable_1.8-4 ## [71] glue_1.6.2 janitor_2.2.0 tools_4.3.1 data.table_1.14.8 ggsignif_0.6.4 ## [76] grid_4.3.1 AnnotationDbi_1.62.2 colorspace_2.1-0 nlme_3.1-162 GenomeInfoDbData_1.2.10 ## [81] cli_3.6.1 km.ci_0.5-6 fansi_1.0.4 gtable_0.3.4 rstatix_0.7.2 ## [86] sass_0.4.7 digest_0.6.33 BiocGenerics_0.46.0 farver_2.1.1 memoise_2.0.1 ## [91] htmltools_0.5.5 lifecycle_1.0.3 httr_1.4.7 gridtext_0.1.5 bit64_4.0.5 "]]
